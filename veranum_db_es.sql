DROP DATABASE IF EXISTS veranum_db;
CREATE DATABASE veranum_db CHARACTER SET utf8 COLLATE utf8_bin;

USE veranum_db;

DROP TABLE IF EXISTS USUARIO;
CREATE TABLE USUARIO
(
    USUARIO_RUN         VARCHAR(15) PRIMARY KEY,
    USUARIO_DV          VARCHAR(1) NOT NULL,
    USUARIO_NOMBRE      VARCHAR(80) NOT NULL,
    USUARIO_APELLIDO    VARCHAR(80) DEFAULT NULL,
    USUARIO_CORREO      VARCHAR(300) NOT NULL,
    USUARIO_TIPO        INT NOT NULL,       -- 1: FUNCIONARIO .- 2: CLIENTE .- 3: PROVEEDOR
    USUARIO_TELEFONO    VARCHAR(18) DEFAULT NULL
);
-- SUBMODULO CLIENTE
DROP TABLE IF EXISTS MENU;
CREATE TABLE MENU
(
    MENU_ID             INT PRIMARY KEY AUTO_INCREMENT,
    MENU_FECHA          DATE NOT NULL,
    MENU_COMIDA_ID      INT NOT NULL
);
DROP TABLE IF EXISTS COMIDA;
CREATE TABLE COMIDA
(
    COMIDA_ID           INT PRIMARY KEY AUTO_INCREMENT,
    COMIDA_NOMBRE       VARCHAR(200) NOT NULL,
    COMIDA_DESCRIPCION  VARCHAR(500) NOT NULL,
    COMIDA_TIPO         INT NOT NULL,       -- 1: DESAYUNO .- 2: ALMUERZO .- 3: ONCE .- 4: CENA
    COMIDA_PRECIO       INT NOT NULL    
);
DROP TABLE IF EXISTS INSUMO_COMIDA;
CREATE TABLE INSUMO_COMIDA
(
    INSUMO_COMIDA_ID         INT PRIMARY KEY AUTO_INCREMENT,
    INSUMO_COMIDA_COMIDA_ID  INT NOT NULL,
    INSUMO_COMIDA_STOCK_ID   INT NOT NULL
);
DROP TABLE IF EXISTS RESERVA;
CREATE TABLE RESERVA
(
    RESERVA_ID          INT PRIMARY KEY AUTO_INCREMENT,
    RESERVA_COMENSALES  INT NOT NULL,
    RESERVA_FECHA       DATE NOT NULL,
    RESERVA_HORA        TIME NOT NULL,
    RESERVA_CLIENTE_RUN VARCHAR(15) NOT NULL
);
DROP TABLE IF EXISTS COMIDA_RESERVA;
CREATE TABLE COMIDA_RESERVA
(
    COMIDA_RESERVA_ID         INT PRIMARY KEY AUTO_INCREMENT,
    COMIDA_RESERVA_CANTIDAD   INT NOT NULL,
    COMIDA_RESERVA_RESERVA_ID INT NOT NULL,
    COMIDA_RESERVA_COMIDA_ID  INT NOT NULL
);
-- FIN SUBMODULO CLIENTE
--
-- SUBMODULO INSUMOS
DROP TABLE IF EXISTS PEDIDO;
CREATE TABLE PEDIDO
(
    PEDIDO_ID              INT PRIMARY KEY AUTO_INCREMENT,
    PEDIDO_SUBTOTAL        INT NOT NULL,
    PEDIDO_FUNCIONARIO_RUN VARCHAR(15) NOT NULL
);
DROP TABLE IF EXISTS INSUMO_PEDIDO;
CREATE TABLE INSUMO_PEDIDO
(
    INSUMO_PEDIDO_ID           INT PRIMARY KEY AUTO_INCREMENT,
    INSUMO_PEDIDO_CANTIDAD     INT NOT NULL,    
    INSUMO_PEDIDO_PEDIDO_ID    INT NOT NULL,
    INSUMO_PEDIDO_STOCK_ID     INT NOT NULL
);
-- FIN SUBMODULO INSUMOS
--
DROP TABLE IF EXISTS STOCK;
CREATE TABLE STOCK
(
    STOCK_ID              INT PRIMARY KEY AUTO_INCREMENT,
    STOCK_NOMBRE          VARCHAR(60) NOT NULL,
    STOCK_CANT_DISPONIBLE INT NOT NULL
);

-- MODIFICACION DE LAS TABLAS
ALTER TABLE MENU                                                  ADD CONSTRAINT            MENU_COMIDA_ID_FK 
    FOREIGN KEY MENU (MENU_COMIDA_ID)                             REFERENCES              COMIDA (COMIDA_ID);
ALTER TABLE RESERVA                                               ADD CONSTRAINT       RESERVA_CLIENTE_RUN_FK 
    FOREIGN KEY RESERVA (RESERVA_CLIENTE_RUN)                     REFERENCES           USUARIO (USUARIO_RUN);
ALTER TABLE COMIDA_RESERVA                                        ADD CONSTRAINT COMIDA_RESERVA_RESERVA_ID_FK 
    FOREIGN KEY COMIDA_RESERVA (COMIDA_RESERVA_RESERVA_ID)        REFERENCES            RESERVA (RESERVA_ID);
ALTER TABLE COMIDA_RESERVA                                        ADD CONSTRAINT  COMIDA_RESERVA_COMIDA_ID_FK 
    FOREIGN KEY COMIDA_RESERVA (COMIDA_RESERVA_COMIDA_ID)         REFERENCES              COMIDA (COMIDA_ID);
ALTER TABLE INSUMO_COMIDA                                         ADD CONSTRAINT   INSUMO_COMIDA_COMIDA_ID_FK
    FOREIGN KEY INSUMO_COMIDA (INSUMO_COMIDA_COMIDA_ID)           REFERENCES              COMIDA (COMIDA_ID);
ALTER TABLE INSUMO_COMIDA                                         ADD CONSTRAINT    INSUMO_COMIDA_STOCK_ID_FK
    FOREIGN KEY INSUMO_COMIDA (INSUMO_COMIDA_STOCK_ID)            REFERENCES                STOCK (STOCK_ID);
ALTER TABLE PEDIDO                                                ADD CONSTRAINT     PEDIDO_FUNCIONARIO_ID_FK 
    FOREIGN KEY PEDIDO (PEDIDO_FUNCIONARIO_RUN)                   REFERENCES           USUARIO (USUARIO_RUN);
ALTER TABLE INSUMO_PEDIDO                                         ADD CONSTRAINT   INSUMO_PEDIDO_PEDIDO_ID_FK 
    FOREIGN KEY INSUMO_PEDIDO (INSUMO_PEDIDO_PEDIDO_ID)           REFERENCES              PEDIDO (PEDIDO_ID);



-- INSERT DE LAS TABLAS

INSERT INTO 
    `comida`(`COMIDA_ID`, `COMIDA_NOMBRE`, `COMIDA_DESCRIPCION`, `COMIDA_TIPO`, `COMIDA_PRECIO`) 
VALUES 
    (9,"Desayuno Americano","Rico desayuno con tostadas y bacon",1,5000),
    (10,"Desayuno Continental","Desayuno saludable para compartir con tu pareja",1,4000),
    (11,"Lasagna","Deliciosa Lasagna de carne para disfrutar en familia", 2,8000),
    (12,"Betabeles y Verduras Asadas al horno con quinua", "Menu Vegetariano para disfrutar en un dia soleado",2,7000),
    (13,"Once Simple","Merienda Simple",3,2000),
    (14,"Once Grande","Merienda Grande",3,4000),
    (15,"Salmon a la Griega","Menu optimo para compartir con su pareja",4,10006),
    (16,"Suprema grillada","Deliciosa Cena para terminar el dia con broche de oro",4,15000);

INSERT INTO `stock`(`STOCK_NOMBRE`, `STOCK_CANT_DISPONIBLE`) 
VALUES 
("Huevo",10000),
("Bacon",10000),
("Pan",10000),
("Cereal",10000),
("Pasta",10000),
("Carne",20000),
("Cebolla",5000),
("Tomate",9000),
("Te",3000),
("Jamon",5940),
("Waffles",5000),
("Salmon",3500),
("Arroz",5000),
("Sopa",4000),
("Ajo",10000),
("Betabeles",10000);

INSERT INTO `insumo_comida`(`INSUMO_COMIDA_COMIDA_ID`, `INSUMO_COMIDA_STOCK_ID`) 
VALUES 
(9,1),(9,2),(10,3),(10,4),(11,5),(11,6),(12,7),
(12,8),(13,9),(13,10),(14,11),(14,12),(15,13),
(15,14),(16,15),(16,16);

INSERT INTO `stock`(`STOCK_NOMBRE`, `STOCK_CANT_DISPONIBLE`) 
VALUES
("Manzana",0);

INSERT INTO `insumo_comida`(`INSUMO_COMIDA_COMIDA_ID`, `INSUMO_COMIDA_STOCK_ID`) 
VALUES 
(10,17);